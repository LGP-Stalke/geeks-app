name: build-and-push-dockerhub

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  REGISTRY: docker.io
  DH_NS: ${{ vars.DOCKERHUB_NAMESPACE }}         # <- ton username Docker Hub
  IMAGE_PREFIX: geeks-app                         # noms: <ns>/geeks-app-{api,web,worker}

jobs:
  # ---------- WEB (build Vite) ----------
  web:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: web } }
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node (no cache)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install deps
        run: npm install

      - name: Build (Vite)
        env:
          VITE_API_URL: ${{ vars.VITE_API_URL }}
        run: npm run build

      - name: Upload web artifact (dist)
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: web/dist
          if-no-files-found: error

  # ---------- API (Node) ----------
  api:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: api } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install deps
        run: npm install

      - name: Build (noop if none)
        run: npm run build --if-present

  # ---------- Docker build & push (Docker Hub) ----------
  docker:
    runs-on: ubuntu-latest
    needs: [web, api]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Download web artifact
        uses: actions/download-artifact@v4
        with:
          name: web-dist
        # place dans web/dist par défaut (même nom que l'upload)
        # si besoin: path: web/dist

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DH_NS }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata (api)
        id: meta_api
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.DH_NS }}/${{ env.IMAGE_PREFIX }}-api
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Docker metadata (web)
        id: meta_web
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.DH_NS }}/${{ env.IMAGE_PREFIX }}-web
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Docker metadata (worker)
        id: meta_worker
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.DH_NS }}/${{ env.IMAGE_PREFIX }}-worker
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      # --- Build & push API image ---
      - name: Build & push API image
        uses: docker/build-push-action@v6
        with:
          context: ./api
          file: ./api/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_api.outputs.tags }}
          labels: ${{ steps.meta_api.outputs.labels }}

      # --- Build & push WEB image ---
      # IMPORTANT: Le Dockerfile web ne doit PAS faire "npm ci".
      # Il doit juste copier le dossier dist (produit par le job web) vers nginx.
      - name: Build & push WEB image
        uses: docker/build-push-action@v6
        with:
          context: ./web
          file: ./web/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_web.outputs.tags }}
          labels: ${{ steps.meta_web.outputs.labels }}

      # --- Build & push WORKER image ---
      - name: Build & push WORKER image
        uses: docker/build-push-action@v6
        with:
          context: ./worker
          file: ./worker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_worker.outputs.tags }}
          labels: ${{ steps.meta_worker.outputs.labels }}
